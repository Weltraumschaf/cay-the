@startuml

skinparam componentStyle uml2

class Object {
    +toString()
    +hashCode()
    +equals(Any)
}

interface Type<T> <<Native>> {
    + List<Property> properties <<Property>>
    + List<Method> methods <<Method>>
    --
    +T new()
    +String name()
    +String fullQualifiedName()
}

class Property <<Native>>
class Method <<Native>>

Type -- Property
Type -- Method

object SomethingType <<Native, Dynamic>> {
    +Something new()
    ...
}

class Something {
    + String foo <<Property>>
    + String bar <<Property>>
    --
    + initWith(String foo, String bar)
}

SomethingType ..|> Type

Something ..> Object : delegate
Something -> Type : type

note left of Something {
    var s = Something.type.new()
    // or shorthand:
    var s = Something.new()
    s.initWith("foo", "bar")

    var t = Something.type
    ... t.properties
    ... t.methods
}

@enduml