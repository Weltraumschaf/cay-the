<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.weltraumschaf.organization</groupId>
        <artifactId>organization-parent</artifactId>
        <version>3.0.0-SNAPSHOT</version>
    </parent>

    <groupId>de.weltraumschaf</groupId>
    <artifactId>caythe</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Cay-The</name>
    <description>My own programming language.</description>
    <url>http://weltraumschaf.github.com/cay-the/</url>

    <developers>
        <developer>
            <id>Weltraumschaf</id>
            <name>Sven Strittmatter</name>
            <email>ich@weltraumschaf.de</email>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>THE BEER-WARE LICENSE</name>
            <url>http://www.weltraumschaf.de/the-beer-ware-license.txt</url>
            <distribution>repo</distribution>
            <comments>
                LICENSE

                "THE BEER-WARE LICENSE" (Revision 42):
                "Sven Strittmatter" &lt;weltraumschaf(at)googlemail(dot)com&gt; wrote this file.
                As long as you retain this notice you can do whatever you want with
                this stuff. If we meet some day, and you think this stuff is worth it,
                you can buy me a beer in return.
            </comments>
        </license>
    </licenses>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/Weltraumschaf/cay-the/issues</url>
    </issueManagement>

    <scm>
        <connection>scm:git:git://github.com/Weltraumschaf/cay-the.git</connection>
        <developerConnection>scm:git:git@github.com:Weltraumschaf/cay-the.git</developerConnection>
        <url>https://github.com/Weltraumschaf/cay-the.git</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <site>
            <id>github-project-site</id>
            <url>gitsite:git@github.com/Weltraumschaf/cay-the.git</url>
        </site>
    </distributionManagement>

    <ciManagement>
        <system>jenkins</system>
        <url>https://ci.weltraumschaf.de/job/cay-the/</url>
    </ciManagement>

    <properties>
        <enforcer.skip>true</enforcer.skip><!-- String template does not enforce. -->
        <project.build.version.source>1.8</project.build.version.source>
        <project.build.version.target>1.8</project.build.version.target>

        <project.build.mainClass>de.weltraumschaf.caythe.cli.CliApplication</project.build.mainClass>
        <project.bin.directory>${project.basedir}/bin</project.bin.directory>
        <project.bin.executable>caythe</project.bin.executable>
        <project.scripts.directory>${project.basedir}/src/main/scripts</project.scripts.directory>

        <generated.source.dir>src/generated/java</generated.source.dir>
        <antlr.outputdir>de/weltraumschaf/caythe/frontend</antlr.outputdir>

        <!-- LaTeX to PDF generation. -->
        <skip.pdf>false</skip.pdf>
        <latex.command>pdflatex</latex.command>
        <latex.source.directory>${project.basedir}/src/latex</latex.source.directory>
        <latex.build.directory>${project.build.directory}/latex</latex.build.directory>
        <latex.output.directory>${latex.build.directory}/output</latex.output.directory>

        <!-- Dependnecy versions. -->
        <guice-core.version>4.1.0</guice-core.version>
        <antlr.version>4.5.3</antlr.version>
        <commons.version>2.2.0</commons.version>
        <stringtemplate.version>4.0.2</stringtemplate.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>${antlr.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice-core.version}</version>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>application</artifactId>
            <version>${commons.version}</version>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>jcommander</artifactId>
            <version>${commons.version}</version>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>validate</artifactId>
            <version>${commons.version}</version>
        </dependency>

        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>stringtemplate</artifactId>
            <version>${stringtemplate.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>

            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>

                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.bin.directory}</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>${generated.source.dir}</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>${antlr.version}</version>

                <configuration>
                    <listener>false</listener>
                    <visitor>true</visitor>
                    <indentSize>4</indentSize>
                    <lineLength>120</lineLength>
                    <outputDirectory>${generated.source.dir}/${antlr.outputdir}</outputDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>generate-grammar</id>
                        <phase>generate-sources</phase>

                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>

                        <goals>
                            <goal>add-source</goal>
                        </goals>

                        <configuration>
                            <sources>
                                <source>${generated.source.dir}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>

                <executions>
                    <execution>
                        <id>make-executable-jar</id>
                        <phase>package</phase>

                        <goals>
                            <goal>single</goal>
                        </goals>

                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>${project.build.mainClass}</mainClass>
                                </manifest>
                            </archive>

                            <descriptorRefs>
                                <descriptorRefs>jar-with-dependencies</descriptorRefs>
                            </descriptorRefs>

                            <finalName>${project.build.finalName}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <attach>true</attach>
                        </configuration>
                    </execution>

                    <execution>
                        <id>make-final-zip-with-wrapper-scripts</id>
                        <phase>install</phase>

                        <goals>
                            <goal>single</goal>
                        </goals>

                        <configuration>
                            <descriptors>
                                <descriptor>${project.basedir}/src/assembly/distribution.xml</descriptor>
                            </descriptors>

                            <attach>true</attach>
                            <appendAssemblyId>true</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>

                <configuration>
                    <excludes>
                        <exclude>de/weltraumschaf/caythe/frontend/*.class</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>

                <dependencies>
                    <dependency>
                        <!-- For foreach task. -->
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>20020829</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <id>pandoc</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>

                        <configuration>
                            <skip>${skip.pdf}</skip>
                            <target>
                                <ant antfile="${project.basedir}/src/main/ant/build.xml" target="generate-documentation"/>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>generate-executable</id>
                        <!-- Run between the two assembly executions. -->
                        <phase>integration-test</phase>

                        <goals>
                            <goal>run</goal>
                        </goals>

                        <configuration>
                            <target>
                                <concat destfile="${project.build.directory}/${project.bin.executable}" binary="yes">
                                    <fileset file="${project.scripts.directory}/${project.bin.executable}.sh" />
                                    <fileset file="${project.build.directory}/${project.build.finalName}.jar" />
                                </concat>
                                <copy file="${project.build.directory}/${project.bin.executable}" todir="${project.bin.directory}"/>
                                <chmod perm="ugo+rx">
                                    <fileset file="${project.build.directory}/${project.bin.executable}" />
                                    <!-- The copy task does not preserve the executable/readable bits. -->
                                    <fileset file="${project.bin.directory}/${project.bin.executable}" />
                                </chmod>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
            <plugin>
                <groupId>de.weltraumschaf.maven</groupId>
                <artifactId>infallible-maven-plugin</artifactId>
                <version>1.0.0-SNAPSHOT</version>

                <configuration>
                    <skip>false</skip>
                    <startRule>compilationUnit</startRule>
                    <grammarName>CayThe</grammarName>
                    <packageName>${antlr.packageName}</packageName>

                    <filesets>
                        <fileset>
                            <directory>${antlr.exampleFiles}</directory>

                            <includes>
                                <include>**/*.ct</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>

                <executions>
                    <execution>
                        <id>parse-all-exampels</id>

                        <goals>
                            <goal>parse</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->
        </plugins>
    </build>
</project>