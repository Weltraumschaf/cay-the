<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.weltraumschaf.caythe</groupId>
        <artifactId>caythe</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>command-line-tools</artifactId>
    <packaging>jar</packaging>
    
    <name>Cay-The :: Command Line Tools</name>
    <description>This module provides all command line tools.</description>

    <properties>
        <jline.version>2.14.2</jline.version>

        <project.build.mainClass>de.weltraumschaf.caythe.cli.CliApplication</project.build.mainClass>
        <project.bin.executable>caythe</project.bin.executable>

        <bats.command>/usr/local/bin/bats</bats.command>
        <bats.testSource.directory>${project.basedir}/src/test/bats</bats.testSource.directory>
        <bats.build.directory>${project.build.directory}/bats</bats.build.directory>
        <bats.testResults.filename>${bats.build.directory}/bats_testResutls.tap</bats.testResults.filename>
    </properties>

    <dependencies>
        <dependency>
            <groupId>de.weltraumschaf.caythe</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.caythe</groupId>
            <artifactId>frontend</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.caythe</groupId>
            <artifactId>backend</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>application</artifactId>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>jcommander</artifactId>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>validate</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>

        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>stringtemplate</artifactId>
        </dependency>

        <dependency>
            <groupId>jline</groupId>
            <artifactId>jline</artifactId>
            <version>${jline.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>de.weltraumschaf.commons</groupId>
            <artifactId>testing</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit-addons</groupId>
            <artifactId>junit-addons</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.main.resources.directory}</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>

            <resource>
                <directory>${project.main.resources.directory}</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>

                <executions>
                    <execution>
                        <id>add-integration-test-sources</id>
                        <phase>generate-test-sources</phase>

                        <goals>
                            <goal>add-test-source</goal>
                        </goals>

                        <configuration>
                            <sources>
                                <source>${project.it.sources.directory}</source>
                            </sources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>add-integration-test-resources</id>
                        <phase>generate-test-resources</phase>

                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>

                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.it.resources.directory}</directory>

                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.properties</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>

                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.generated.sources.dir}</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>

                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>

                <executions>
                    <execution>
                        <id>generate-binaries</id>
                        <phase>pre-integration-test</phase>

                        <goals>
                            <goal>run</goal>
                        </goals>

                        <configuration>
                            <target>
                                <concat destfile="${project.build.directory}/${project.bin.executable}" binary="yes">
                                    <fileset file="${project.main.scripts.directory}/${project.bin.executable}.sh" />
                                    <fileset file="${project.build.directory}/${project.build.finalName}.jar" />
                                </concat>
                                <chmod perm="ugo+rx">
                                    <fileset file="${project.build.directory}/${project.bin.executable}" />
                                </chmod>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>bats-cli-tests</id>
                        <phase>integration-test</phase>

                        <goals>
                            <goal>run</goal>
                        </goals>

                        <configuration>
                            <target name="Bats CLI tests">
                                <mkdir dir="${bats.build.directory}"/>
                                <exec executable="${bats.command}"
                                      dir="${bats.build.directory}"
                                      failonerror="true">
                                    <redirector outputproperty="redirector.out">
                                        <outputmapper type="merge" to="${bats.testResults.filename}"/>
                                    </redirector>
                                    <env key="SUT" value="${project.build.directory}/${project.bin.executable}"/>
                                    <env key="FIXTURE_DIR" value="${project.test.resources.directory}/bats"/>
                                    <arg value="--tap"/>
                                    <arg value="${bats.testSource.directory}"/>
                                </exec>
                                <echo message="-------------------------------------------------------"/>
                                <echo message=" T E S T S"/>
                                <echo message="-------------------------------------------------------"/>
                                <echo message="${redirector.out}"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>

                <executions>
                    <execution>
                        <id>make-executable-jar</id>
                        <phase>package</phase>

                        <goals>
                            <goal>single</goal>
                        </goals>

                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>${project.build.mainClass}</mainClass>
                                </manifest>
                            </archive>

                            <descriptorRefs>
                                <descriptorRefs>jar-with-dependencies</descriptorRefs>
                            </descriptorRefs>

                            <appendAssemblyId>false</appendAssemblyId>
                            <attach>true</attach>
                        </configuration>
                    </execution>

                    <execution>
                        <id>make-final-zip-with-binaries</id>
                        <phase>post-integration-test</phase>

                        <goals>
                            <goal>single</goal>
                        </goals>

                        <configuration>
                            <descriptors>
                                <descriptor>${project.assembly-desciptors.directory}/binaries.xml</descriptor>
                            </descriptors>

                            <attach>true</attach>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>